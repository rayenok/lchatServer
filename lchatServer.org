#+TITLE:     lchatServer
#+AUTHOR:    Eric Nova Ibáñez
#+EMAIL:     ericnova3@gmail.com
#+DATE:      2014-04-10 jue
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:


* Description
This application does all the authentication and registration of the users for the lchat application (android) and provides also the possibility to log in
using the facebook and the google+ platform.
* Design
** Requirements
- [X] Authenticate login credentials
- [X] Sign up a new user
- [ ] Facebook and Google+ integration
** Deployment diagram
#+BEGIN_SRC plantuml :file CompDiagram.png
@startuml
package "mobile" {
    [lchat client]
}
package "server" {
    [lchatServer]
}
database "MySQL"{
    [Database]
}

[lchatServer] --> [Database]:SQL
[Database] --> [lchatServer]:Data
[lchat client] --> [lchatServer]:JSON (Login/Signup)
[lchatServer] --> [lchat client]:Confirmation
@enduml
#+END_SRC

#+RESULTS:
[[http://s16.postimg.org/t7u6gevph/Comp_Diagram.png]]
** Class diagram
* Setup
** Database
*** Connect to the DDBB
#+BEGIN_SRC sh :result silent
  mysql -h 192.168.1.4 --defaults-file=~/.my.cnf 
#+END_SRC

#+BEGIN_SRC sh :result silent :noweb yes
  mysql --defaults-file=~/.my.cnf -h 192.168.1.4 -e"<<EXE>>"
#+END_SRC

#+RESULTS:

*** Create users table
#+BEGIN_SRC sql :noweb-ref CreateTable
use lchat;

create table users (
    Nick char(30) not null primary key,
    Password char(125) not null,
    Email char(125) not null,
    Description char(255),
    Photo char(255)
);
#+END_SRC

* Implementation
** Trying libraries
*** JSON
#+BEGIN_SRC python :result both
  import json
  
  test = [{'a':1,'b':'hi'}]
  c = json.dumps(test)
  return str(json.loads(c)[0]['a'])
#+END_SRC

#+RESULTS:
: 1
*** MySQLdb
#+BEGIN_SRC python :result both
import MySQLdb

db = MySQLdb.connect(read_default_file="~/.my.cnf",host="192.168.1.4",port=3306,db="lchat")
cur = db.cursor()

cur.execute("""SELECT * FROM users;""")
return cur.fetchall()
#+END_SRC

#+RESULTS:
| test32 | 2b176eaf51e9ccdc0190048e64d607a6fae17e6c$0a8a77857ef446ea9cede48e38c5a24e | bla@bla.com | idk | /go/to/foo.png |

* Test
* Documentation
- http://pymotw.com/2/json/
- https://developers.facebook.com/docs/android/getting-started/
- http://stackoverflow.com/questions/2572099/pythons-safest-method-to-store-and-retrieve-passwords-from-a-database
- https://docs.python.org/2/library/socket.html
- https://docs.python.org/2/library/thread.html
- http://seanmcgary.com/posts/threaded-tcp-server-in-python
- http://ianhowson.com/a-quick-guide-to-using-mysql-in-python.html
